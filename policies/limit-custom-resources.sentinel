import "tfplan/v2" as tfplan
import "tfconfig/v2" as tfconfig
import "strings"
import "http"
import "json"

req = http.request("https://raw.githubusercontent.com/kevincloud/terraform-azure-modules/master/data/prohibited-resources.json")
res = json.unmarshal(http.get(req).body)
prohibited_resources = res["blacklist"]

req = http.request("https://raw.githubusercontent.com/kevincloud/terraform-azure-modules/master/data/required-modules.json")
res = json.unmarshal(http.get(req).body)
required_modules = res["required-modules"]

# Get all referenced modules
get_modules = func() {
    modules = []
    for tfconfig.module_calls as mod {
        modname = strings.split(tfconfig.module_calls[mod].source, "/")[2]
        if modname in required_modules {
            modmod = "module." + mod
            append(modules, modmod)
        }
    }
    return modules
}

module_list = get_modules()

violations = filter tfplan.resource_changes as _, res {
    res.type in prohibited_resources and
    res.module_address not in module_list
}

main = rule { length(violations) is 0 }
