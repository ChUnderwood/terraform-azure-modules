import "tfplan/v2" as tfplan
import "tfconfig/v2" as tfconfig
import "strings"
import "http"

prohibited_resources = [
    "azurerm_resource_group",
    "azurerm_virtual_network",
    "azurerm_network_security_group",
    "azurerm_subnet_network_security_group_association",
]

required_modules = [
    "custom-vnet",
    "custom-sg",
    "custom-blob",
]

# Get all referenced modules
get_modules = func() {
    modules = []
    for tfconfig.module_calls as mod {
        modname = strings.split(tfconfig.module_calls[mod].source, "/")[2]
        if modname in required_modules {
            modmod = "module." + mod
            append(modules, modmod)
        }
    }
    return modules
}

module_list = get_modules()

violations = filter tfplan.resource_changes as _, res {
    res.type in prohibited_resources and
    res.module_address not in module_list
}


print("Modules:")
print(module_list)

print()

print ("Violations:")
print(violations)

main = rule { length(violations) == 0 }
