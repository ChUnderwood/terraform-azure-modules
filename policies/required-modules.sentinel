#
# This module enforces the usage of required modules. An infrastructure team, 
# for instance, may produce a standard set of modules for engineering 
# teams to consume. In order to reduce risk, this policy enforces 
# the usage of those modules. 
#

import "tfconfig/v2" as tfconfig
import "strings"

# Get all referenced modules
get_modules = func() {
    modules = []
    for tfconfig.module_calls as mod {
        print(mod)
        print(tfconfig.module_calls[module_address:mod])
        # modname = strings.split(mod["source"], "/")
        # append(modules, modname[2])
    }
    return modules
}

# These modules are required to be used
required_modules = [
    "custom-vnet",
    "custom-sg",
    "custom-blob",
]

# Store modules in a global variable
selected_modules = get_modules()

# Rule to ensure all required modules are used
use_modules = rule {
    all required_modules as mod {
        mod in selected_modules
    }
}

# Evaluate for main rule; must evaluate to true to pass
main = rule { (use_modules) else true }
